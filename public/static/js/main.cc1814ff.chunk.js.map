{"version":3,"sources":["components/Queries/Queries.js","context/auth-context.js","pages/Auth.js","helper/date-helper.js","components/Modal/ModalComp.js","components/Events/EventItem.js","components/Events/EventSlider.js","components/Events/EventList.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["LOGIN","gql","CREATE_USER","CREATE_EVENT","DELETE_EVENT","PAST_EVENT","FETCH_EVENTS","BOOK_EVENT","FETCH_BOOKINGS","CANCEL_BOOKING","AuthContext","createContext","schema","Yup","shape","email","max","required","password","min","AuthPage","useState","isLogin","setIsLogin","context","useContext","useMutation","Login","loading","error","data","CreateUser","loadingCreateUser","dataCreateUser","errorCreateUser","globalError","Spinner","animation","role","className","login","token","userId","tokenExpiration","AuthContainer","validationSchema","onSubmit","values","resetForm","variables","then","setEmail","initialValues","handleSubmit","handleChange","touched","errors","handleReset","Form","style","backgroundColor","Group","onClick","Control","type","name","value","placeholder","onChange","isInvalid","Feedback","disabled","styled","div","months_array","months_full_array","days_array","hours","param","H","Date","getHours","M","getMinutes","m","days","d","getDay","date","getDate","months","getMonth","months_full","year","getFullYear","eventDate","starts","ends","ModalComp","props","Modal","show","onHide","onBack","centered","Header","closeButton","Title","Body","children","Footer","canCreate","onCreate","authUserId","creatorId","canDelete","onDelete","bind","eventId","canBook","onBook","bookText","canCancel","onCancel","bookingId","EventItem","key","overflow","whiteSpace","textOverflow","wordWrap","location","canViewBook","onBookDetail","bookId","canViewEvent","onEventDetail","EventSlider","resizeId","currentCard","setCurrentCard","position","setPosition","transform","cardStyle","setCardStyle","width","setWidth","getWidth","boxWidth","document","getElementById","clientWidth","window","addEventListener","e","preventDefault","clearTimeout","setTimeout","doneResizing","events","length","setCard","currentCard_","position_","handleClick","margin","getComputedStyle","marginRight","JSON","parse","replace","cardWidth","cardMargin","cardNumber","useEffect","Slider_Containder","header","map","event","i","id","EventList","myBookings","bookings","booking","_id","description","creator","onViewBook","myEvents","filter","onViewEvent","otherEvents","EventsPage","validated","setValidated","redirect","setRedirect","creating","setCreating","selectedEvent","setSelectedEvent","selectedBooking","setSelectedBooking","endDate","setEndDate","startDate","setStartDate","nameElRef","useRef","locationElRef","descriptionElRef","startsElRef","endsElRef","refetchQueries","CreateEvent","useQuery","loadingFetch","dataFetch","refetch","onCompleted","DeleteEvent","dataBook","refetchBook","PastEvent","BookEvent","CancelBooking","events_","bookings_","push","b","modalCancelHandler","unAuth","console","log","to","current","currentTarget","checkValidity","stopPropagation","trim","noValidate","as","Row","Label","column","sm","htmlFor","Col","ref","rows","target","cursor","toString","find","MainNavigation","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","minWidth","userEmail","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","reAuth","from","exact","path","component","ReactDOM","render","setToken","setUserId","setUserEmail","Provider","lodiUserEmail","lodiToken","lodiUserId","removeItem"],"mappings":"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","file":"static/js/main.cc1814ff.chunk.js","sourcesContent":["import gql from 'graphql-tag';\r\n\r\nexport const LOGIN = gql`\r\n  mutation Login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      userId\r\n      token\r\n      tokenExpiration\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation CreateUser($email: String!, $password: String!) {\r\n    createUser(userInput: { email: $email, password: $password }) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_EVENT = gql`\r\n  mutation CreateEvent(\r\n    $name: String!\r\n    $location: String!\r\n    $description: String!\r\n    $starts: String!\r\n    $ends: String!\r\n  ) {\r\n    createEvent(\r\n      eventInput: {\r\n        name: $name\r\n        location: $location\r\n        description: $description\r\n        starts: $starts\r\n        ends: $ends\r\n      }\r\n    ) {\r\n      _id\r\n      name\r\n      location\r\n      description\r\n      starts\r\n      ends\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_EVENT = gql`\r\n  mutation DeleteEvent($id: ID!) {\r\n    deleteEvent(eventId: $id) {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PAST_EVENT = gql`\r\n  mutation PastEvent($id: ID!) {\r\n    pastEvent(eventId: $id) {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_EVENTS = gql`\r\n  query FetchEvents {\r\n    events {\r\n      _id\r\n      name\r\n      location\r\n      description\r\n      starts\r\n      ends\r\n      creator {\r\n        _id\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BOOK_EVENT = gql`\r\n  mutation BookEvent($id: ID!) {\r\n    bookEvent(eventId: $id) {\r\n      _id\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_BOOKINGS = gql`\r\n  query FetchBookings {\r\n    bookings {\r\n      _id\r\n      createdAt\r\n      event {\r\n        _id\r\n        name\r\n        location\r\n        description\r\n        starts\r\n        ends\r\n        creator {\r\n          _id\r\n          email\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CANCEL_BOOKING = gql`\r\n  mutation CancelBooking($id: ID!) {\r\n    cancelBooking(bookingId: $id) {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = props => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n\r\n  const reAuth = (token, userId) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n  };\r\n\r\n  const setEmail = email => {\r\n    setUserEmail(email);\r\n    localStorage.lodiUserEmail = email;\r\n  };\r\n\r\n  const login = (token, userId, tokenExpiration) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n    localStorage.lodiToken = token;\r\n    localStorage.lodiUserId = userId;\r\n  };\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setUserEmail(null);\r\n    localStorage.removeItem('lodiToken');\r\n    localStorage.removeItem('lodiUserId');\r\n    localStorage.removeItem('lodiUserEmail');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        userId,\r\n        userEmail,\r\n        reAuth,\r\n        setEmail,\r\n        login,\r\n        logout\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Spinner } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport styled from 'styled-components';\r\n\r\nimport { LOGIN, CREATE_USER } from '../components/Queries/Queries';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst schema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Invalid Email!')\r\n    .max(30, 'Must be shorter than 30!')\r\n    .required('Email is required!'),\r\n  password: Yup.string()\r\n    .min(4, 'Password must be 4 characters or longer!')\r\n    .max(16, 'Must be shorter than 16!')\r\n    .required('Password is required!')\r\n});\r\n\r\nconst AuthPage = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  // const [globalError, setglobalError] = useState(null);\r\n  const context = useContext(AuthContext);\r\n\r\n  const [Login, { loading, error, data }] = useMutation(LOGIN);\r\n  const [\r\n    CreateUser,\r\n    { loading: loadingCreateUser, data: dataCreateUser, error: errorCreateUser }\r\n  ] = useMutation(CREATE_USER);\r\n\r\n  let globalError = '';\r\n\r\n  if (loading || loadingCreateUser) {\r\n    return (\r\n      <Spinner\r\n        animation='border'\r\n        role='status'\r\n        className='d-flex justify-content-center align-items-center mx-auto mt-5'\r\n      />\r\n    );\r\n  }\r\n  if (error) {\r\n    globalError = 'Email and/or password is incorrect, please try again!';\r\n  }\r\n  if (data) {\r\n    const { token, userId, tokenExpiration } = data.login;\r\n    context.login(token, userId, tokenExpiration);\r\n  }\r\n\r\n  if (errorCreateUser) {\r\n    globalError = 'User exist already!';\r\n  }\r\n  if (dataCreateUser) {\r\n    globalError = 'User created!';\r\n  }\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLogin(!isLogin);\r\n  };\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          const { email, password } = values;\r\n          if (isLogin) {\r\n            Login({\r\n              variables: { email, password }\r\n            }).then(() => context.setEmail(email));\r\n          } else {\r\n            CreateUser({\r\n              variables: { email, password }\r\n            });\r\n          }\r\n          // resetForm();\r\n        }}\r\n        initialValues={{ email: '', password: '' }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          values,\r\n          touched,\r\n          errors,\r\n          handleReset\r\n        }) => (\r\n          <>\r\n            <Form\r\n              onSubmit={handleSubmit}\r\n              className='auth-form'\r\n              style={\r\n                isLogin\r\n                  ? { backgroundColor: '#f8f9fa' }\r\n                  : { backgroundColor: '#dadcdd' }\r\n              }\r\n            >\r\n              <Form.Group className='d-flex justify-content-between align-items-start'>\r\n                <p>{isLogin ? 'Login' : 'Signup'}</p>\r\n                <p\r\n                  className='cursor-pointer font-weight-bold text-dark'\r\n                  onClick={() => {\r\n                    switchModeHandler();\r\n                    handleReset();\r\n                  }}\r\n                >\r\n                  Switch to {isLogin ? 'Signup' : 'Login'}\r\n                </p>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                {globalError && (\r\n                  <p className='text-danger small'>{globalError}</p>\r\n                )}\r\n                <Form.Control\r\n                  type='text'\r\n                  name='email'\r\n                  value={values.email}\r\n                  placeholder='Email'\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.password && !!errors.email}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Control\r\n                  type='password'\r\n                  name='password'\r\n                  value={values.password}\r\n                  placeholder='Password'\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.password && !!errors.password}\r\n                />\r\n                <Form.Control.Feedback type='invalid'>\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-dark'\r\n                  disabled={loading}\r\n                >\r\n                  {!isLogin ? 'Signup' : 'Login'}\r\n                </button>\r\n              </Form.Group>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </AuthContainer>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n\r\nconst AuthContainer = styled.div`\r\n  .auth-form {\r\n    padding: 1rem;\r\n    width: 25rem;\r\n    max-width: 80%;\r\n    margin: 5rem auto;\r\n  }\r\n  .cursor-pointer {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","const months_array = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\nconst months_number = [\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12'\r\n];\r\nconst months_full_array = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\nconst days_array = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\n\r\nexport const hours = param => {\r\n  const H = new Date(param).getHours();\r\n  const M = new Date(param).getMinutes();\r\n  const m = M !== 0 ? `:${M}` : '';\r\n  if (H === 0) return `12${m} AM`;\r\n  if (H > 12) {\r\n    const h = H - 12;\r\n    return `${h}${m} PM`;\r\n  }\r\n  return `${H}${m} AM`;\r\n};\r\n\r\nexport const days = d => days_array[new Date(d).getDay()];\r\nexport const date = d => new Date(d).getDate();\r\nexport const months = d => months_array[new Date(d).getMonth()];\r\nexport const months_full = d => months_full_array[new Date(d).getMonth()];\r\nexport const year = d => new Date(d).getFullYear();\r\n\r\nexport const date_full = d => {\r\n  return `${new Date(d).getFullYear()}-${\r\n    months_number[new Date(d).getMonth()]\r\n  }-${new Date(d).getDate()}T00:00`;\r\n};\r\n\r\nexport const eventDate = (starts, ends) => {\r\n  if (!ends)\r\n    return `${days(starts)}, ${months_full(starts)} ${date(starts)}, ${year(\r\n      starts\r\n    )} at ${hours(starts)} `;\r\n\r\n  if (days(starts) !== days(ends))\r\n    return `${months(starts)} ${date(starts)} at ${hours(starts)} - ${months(\r\n      ends\r\n    )} ${date(ends)} at ${hours(ends)}`;\r\n\r\n  if (days(starts) === days(ends))\r\n    return `${days(starts)}, ${months_full(starts)} ${date(starts)}, ${year(\r\n      starts\r\n    )} at ${hours(starts)} - ${hours(ends)}`;\r\n};\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst ModalComp = props => {\r\n  return (\r\n    <Modal show={true} onHide={props.onBack} centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{props.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {/* Back Button */}\r\n        <button className='btn btn-dark' onClick={props.onBack}>\r\n          Back\r\n        </button>\r\n        {/* Create Event Button */}\r\n        {props.canCreate && (\r\n          <button className='btn btn-dark' onClick={props.onCreate}>\r\n            Create\r\n          </button>\r\n        )}\r\n        {/* Delete Event Button */}\r\n        {props.authUserId === props.creatorId &&\r\n          (props.canDelete && (\r\n            <button\r\n              className='btn btn-dark'\r\n              onClick={props.onDelete.bind(this, props.eventId)}\r\n            >\r\n              Delete Event\r\n            </button>\r\n          ))}\r\n        {/* Book Event Button*/}\r\n        {props.authUserId !== props.creatorId &&\r\n          (props.canBook && (\r\n            <button\r\n              className='btn btn-dark'\r\n              onClick={props.onBook.bind(this, props.eventId)}\r\n            >\r\n              {props.bookText}\r\n            </button>\r\n          ))}\r\n        {/* Delete Booking Button*/}\r\n        {props.canCancel && (\r\n          <button\r\n            className='btn btn-dark'\r\n            onClick={props.onCancel.bind(this, props.bookingId)}\r\n          >\r\n            Cancel Booking\r\n          </button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalComp;\r\n","import React from 'react';\r\n\r\nimport { days, months } from '../../helper/date-helper';\r\n\r\nconst EventItem = props => (\r\n  <div key={props.eventId} className='card'>\r\n    <div className='card-body'>\r\n      <h5\r\n        className='card-title text-center'\r\n        style={{\r\n          overflow: 'hidden',\r\n          whiteSpace: 'nowrap',\r\n          textOverflow: 'ellipsis'\r\n        }}\r\n      >\r\n        {props.name}\r\n      </h5>\r\n      <div className='d-flex flex-row align-items-start'>\r\n        <div className='d-flex flex-column justify-content-center align-items-center '>\r\n          <span className='text-danger'>{months(props.starts)}</span>\r\n          <h1>{new Date(props.starts).getDate()}</h1>\r\n        </div>\r\n        <div className='mt-2 ml-2'>\r\n          <h6\r\n            className='card-subtitle text-muted'\r\n            style={{\r\n              wordWrap: 'break-word',\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n          >\r\n            {days(props.starts)} - {props.location}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className='card-footer bg-white'>\r\n      {props.canViewBook && (\r\n        <button\r\n          className='btn btn-dark'\r\n          onClick={props.onBookDetail.bind(this, props.bookId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n      {props.canViewEvent && (\r\n        <button\r\n          className='btn btn-dark'\r\n          onClick={props.onEventDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default EventItem;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EventSlider = props => {\r\n  const [currentCard, setCurrentCard] = useState(0);\r\n  const [position, setPosition] = useState(0);\r\n  const [cardStyle, setCardStyle] = useState({ transform: 'translateX(0px)' });\r\n  const [width, setWidth] = useState(0);\r\n\r\n  const getWidth = () => {\r\n    const boxWidth = document.getElementById('card1').clientWidth;\r\n    setWidth(boxWidth);\r\n  };\r\n\r\n  let resizeId;\r\n\r\n  window.addEventListener('resize', e => {\r\n    e.preventDefault();\r\n    clearTimeout(resizeId);\r\n    resizeId = setTimeout(doneResizing, 500);\r\n  });\r\n\r\n  const doneResizing = () => {\r\n    if (props.events.length !== 0) {\r\n      getWidth();\r\n      setCard(0, 0);\r\n    }\r\n  };\r\n\r\n  const setCard = (currentCard_, position_) => {\r\n    setCurrentCard(currentCard_);\r\n    setPosition(position_);\r\n    setCardStyle({ transform: `translateX(${position_}px)` });\r\n  };\r\n\r\n  const handleClick = type => {\r\n    let margin = window.getComputedStyle(document.getElementById('card1'))\r\n      .marginRight;\r\n    margin = JSON.parse(margin.replace(/px/i, ''));\r\n\r\n    const cardWidth = width;\r\n    const cardMargin = margin;\r\n    const cardNumber = props.events.length;\r\n    let currentCard_ = currentCard;\r\n    let position_ = position;\r\n\r\n    if (type === 'next' && currentCard_ < cardNumber - 1) {\r\n      currentCard_++;\r\n      position_ -= cardWidth + cardMargin;\r\n    } else if (type === 'prev' && currentCard_ > 0) {\r\n      currentCard_--;\r\n      position_ += cardWidth + cardMargin;\r\n    }\r\n\r\n    setCard(currentCard_, position_);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.events.length !== 0) getWidth();\r\n  }, []);\r\n\r\n  return (\r\n    <Slider_Containder className='mt-2'>\r\n      <div className='cards-slider'>\r\n        <div className=''>\r\n          <button\r\n            className='slider-btn btn-l'\r\n            onClick={() => handleClick('prev')}\r\n          >\r\n            &lt;\r\n          </button>\r\n          <button\r\n            className='slider-btn btn-r'\r\n            onClick={() => handleClick('next')}\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n        <div className='card'>\r\n          <h5 className='card-header'>{props.header}</h5>\r\n          <div className='card-body'>\r\n            {props.events.map((event, i) => {\r\n              return (\r\n                <div className='card1' id='card1' style={cardStyle} key={i}>\r\n                  {event}\r\n                </div>\r\n              );\r\n            })}\r\n            {props.events.length === 0 && (\r\n              <p>You don't have any events coming up.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Slider_Containder>\r\n  );\r\n};\r\n\r\nexport default EventSlider;\r\n\r\nconst Slider_Containder = styled.div`\r\n  .cards-slider {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    display: inline-block;\r\n    background: #e3e3e3;\r\n    margin: 5px 0;\r\n    border: 1px solid #d8d8d8;\r\n    box-shadow: 1px 1px 10px #d8d8d8;\r\n  }\r\n\r\n  .card1 {\r\n    float: left !important;\r\n    text-align: left;\r\n    width: 33%;\r\n    max-width: 350px;\r\n    position: relative;\r\n    display: inline-block;\r\n    left: 0;\r\n    clear: both;\r\n    margin-right: 5px;\r\n    float: none !important;\r\n    transition: transform 0.2s ease-in-out;\r\n    vertical-align: top;\r\n  }\r\n\r\n  @media only screen and (max-width: 800px) {\r\n    .card1 {\r\n      width: 50%;\r\n      max-width: 50% !important;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 550px) {\r\n    .card1 {\r\n      width: 90%;\r\n      max-width: 90% !important;\r\n    }\r\n  }\r\n\r\n  .slider-btn {\r\n    padding: 0;\r\n    font-size: 20px;\r\n    text-align: center;\r\n    color: #b3b3b3;\r\n    width: 45px;\r\n    height: 100%;\r\n    border: 0;\r\n    cursor: pointer;\r\n    background: none;\r\n    outline: none;\r\n    position: absolute;\r\n    z-index: 999;\r\n    transition: all 0.6s ease 0s;\r\n  }\r\n\r\n  .slider-btn:hover {\r\n    color: #5f5f5f;\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .btn-r {\r\n    right: 0;\r\n  }\r\n\r\n  .btn-l {\r\n    left: 0px;\r\n  }\r\n`;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport EventItem from './EventItem';\r\nimport EventSlider from './EventSlider';\r\n\r\nconst EventList = props => {\r\n  const context = useContext(AuthContext);\r\n\r\n  const myBookings = props.bookings.map(booking => {\r\n    let { event } = booking;\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        bookId={booking._id}\r\n        name={event.name}\r\n        location={event.location}\r\n        description={event.description}\r\n        starts={event.starts}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onBookDetail={props.onViewBook}\r\n        canViewBook\r\n      />\r\n    );\r\n  });\r\n\r\n  const myEvents = props.events\r\n    .filter(event => event.creator._id === props.authUserId)\r\n    .map(event => {\r\n      return (\r\n        <EventItem\r\n          key={event._id}\r\n          eventId={event._id}\r\n          name={event.name}\r\n          location={event.location}\r\n          description={event.description}\r\n          starts={event.starts}\r\n          userId={props.authUserId}\r\n          creatorId={event.creator._id}\r\n          onEventDetail={props.onViewEvent}\r\n          canViewEvent\r\n        />\r\n      );\r\n    });\r\n\r\n  const otherEvents = props.events\r\n    .filter(event => event.creator._id !== props.authUserId)\r\n    .map(event => {\r\n      return (\r\n        <EventItem\r\n          key={event._id}\r\n          eventId={event._id}\r\n          name={event.name}\r\n          location={event.location}\r\n          description={event.description}\r\n          starts={event.starts}\r\n          userId={props.authUserId}\r\n          creatorId={event.creator._id}\r\n          onEventDetail={props.onViewEvent}\r\n          canViewEvent\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {context.token && (\r\n        <>\r\n          <EventSlider\r\n            header='Upcoming Events'\r\n            events={[...myEvents, ...myBookings]}\r\n          />\r\n          <EventSlider header='Events You May Like' events={otherEvents} />\r\n        </>\r\n      )}\r\n      {!context.token && <EventSlider header='Events' events={otherEvents} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport { Form, Spinner, Row, Col } from 'react-bootstrap';\r\n\r\nimport { eventDate, date_full, months } from '../helper/date-helper';\r\nimport { MdLocationOn, MdAccessTime, MdAdd } from 'react-icons/md';\r\nimport ModalComp from '../components/Modal/ModalComp';\r\nimport EventList from '../components/Events/EventList';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport {\r\n  CREATE_EVENT,\r\n  FETCH_EVENTS,\r\n  DELETE_EVENT,\r\n  PAST_EVENT,\r\n  BOOK_EVENT,\r\n  FETCH_BOOKINGS,\r\n  CANCEL_BOOKING\r\n} from '../components/Queries/Queries';\r\n\r\nconst EventsPage = () => {\r\n  const context = useContext(AuthContext);\r\n  const [validated, setValidated] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [creating, setCreating] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [selectedBooking, setSelectedBooking] = useState(null);\r\n  const [endDate, setEndDate] = useState(false);\r\n  const [startDate, setStartDate] = useState('');\r\n\r\n  const nameElRef = useRef(null);\r\n  const locationElRef = useRef(null);\r\n  const descriptionElRef = useRef(null);\r\n  const startsElRef = useRef(null);\r\n  const endsElRef = useRef(null);\r\n\r\n  const [CreateEvent] = useMutation(CREATE_EVENT, {\r\n    refetchQueries: [`FetchEvents`]\r\n  });\r\n\r\n  const {\r\n    loading: loadingFetch,\r\n    error: errorFetch,\r\n    data: dataFetch,\r\n    refetch\r\n  } = useQuery(FETCH_EVENTS);\r\n\r\n  const [DeleteEvent] = useMutation(DELETE_EVENT, {\r\n    onCompleted: () => setSelectedEvent(null)\r\n  });\r\n\r\n  const {\r\n    loading: loadingBook,\r\n    error: errorBook,\r\n    data: dataBook,\r\n    refetch: refetchBook\r\n  } = useQuery(FETCH_BOOKINGS);\r\n\r\n  const [PastEvent] = useMutation(PAST_EVENT);\r\n\r\n  const [BookEvent] = useMutation(BOOK_EVENT, {\r\n    onCompleted: () => setSelectedEvent(null)\r\n  });\r\n\r\n  const [CancelBooking] = useMutation(CANCEL_BOOKING, {\r\n    onCompleted: () => setSelectedBooking(null)\r\n  });\r\n\r\n  refetch();\r\n  refetchBook();\r\n\r\n  let events_ = [],\r\n    bookings_ = [];\r\n\r\n  if (dataFetch) dataFetch.events.map(e => events_.push(e));\r\n  if (dataBook) dataBook.bookings.map(b => bookings_.push(b));\r\n\r\n  const startCreateEventHandler = () => {\r\n    setCreating(true);\r\n  };\r\n\r\n  const modalConfirmHandler = event => {\r\n    const name = nameElRef.current.value;\r\n    const location = locationElRef.current.value;\r\n    const description = descriptionElRef.current.value;\r\n    const starts = startsElRef.current.value;\r\n    let ends = '';\r\n    if (endDate) ends = endsElRef.current.value;\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    setValidated(true);\r\n\r\n    if (\r\n      name.trim().length === 0 ||\r\n      location.trim().length === 0 ||\r\n      description.trim().length === 0 ||\r\n      starts.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    CreateEvent({\r\n      variables: {\r\n        name,\r\n        location,\r\n        description,\r\n        starts,\r\n        ends\r\n      }\r\n    });\r\n    setValidated(false);\r\n    setCreating(false);\r\n  };\r\n\r\n  const modalCancelHandler = () => {\r\n    setCreating(false);\r\n    setSelectedEvent(null);\r\n    setSelectedBooking(null);\r\n    setValidated(false);\r\n    setEndDate(false);\r\n  };\r\n\r\n  const showEventDetail = eventId => {\r\n    const selectedEvent = events_.find(e => e._id === eventId);\r\n    setSelectedEvent(selectedEvent);\r\n  };\r\n  const showBookDetail = bookId => {\r\n    const selectedBooking = bookings_.find(b => b._id === bookId);\r\n    setSelectedBooking(selectedBooking);\r\n  };\r\n\r\n  const unAuth = () => {\r\n    setSelectedEvent(null);\r\n    setRedirect(true);\r\n    return;\r\n  };\r\n\r\n  const addEndDate = () => {\r\n    setEndDate(!endDate);\r\n  };\r\n\r\n  const pastEventsDeleter = () => {\r\n    return events_\r\n      .filter(e => {\r\n        return e.ends\r\n          ? new Date(e.ends) < new Date()\r\n          : new Date(e.starts) < new Date();\r\n      })\r\n      .map(e => {\r\n        PastEvent({ variables: { id: e._id } });\r\n        console.log(`${e.name} deleted`);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    pastEventsDeleter();\r\n  }, [dataFetch]);\r\n\r\n  if (redirect) return <Redirect push to='/auth' />;\r\n\r\n  const { token, userId } = context;\r\n\r\n  return (\r\n    <>\r\n      {/* Create Event Modal */}\r\n      {creating && (\r\n        <ModalComp\r\n          name='Create Event'\r\n          canCreate\r\n          onBack={modalCancelHandler}\r\n          onCreate={modalConfirmHandler}\r\n        >\r\n          <Form noValidate validated={validated}>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2} htmlFor='name'>\r\n                Name\r\n              </Form.Label>\r\n              <Col sm={8}>\r\n                <Form.Control\r\n                  type='text'\r\n                  id='name'\r\n                  ref={nameElRef}\r\n                  placeholder='Name'\r\n                  required\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2} htmlFor='location'>\r\n                Location\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  type='text'\r\n                  id='location'\r\n                  ref={locationElRef}\r\n                  placeholder='Location'\r\n                  required\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2} htmlFor='description'>\r\n                Description\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Control\r\n                  as='textarea'\r\n                  id='description'\r\n                  rows='2'\r\n                  ref={descriptionElRef}\r\n                  placeholder='Description'\r\n                  required\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column sm={2} htmlFor='starts'>\r\n                Starts\r\n              </Form.Label>\r\n              <Col sm={7}>\r\n                <Form.Control\r\n                  as='input'\r\n                  type='datetime-local'\r\n                  id='starts'\r\n                  ref={startsElRef}\r\n                  // min={date_full(new Date())}\r\n                  onChange={e => setStartDate(e.target.value)}\r\n                  required\r\n                />\r\n              </Col>\r\n              <Form.Label\r\n                column\r\n                sm={3}\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  addEndDate();\r\n                }}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                + End Date\r\n              </Form.Label>\r\n            </Form.Group>\r\n            {endDate && (\r\n              <Form.Group as={Row}>\r\n                <Form.Label column sm={2} htmlFor='ends'>\r\n                  Ends\r\n                </Form.Label>\r\n                <Col sm={7}>\r\n                  <Form.Control\r\n                    as='input'\r\n                    type='datetime-local'\r\n                    id='ends'\r\n                    ref={endsElRef}\r\n                    min={startDate.toString()}\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n        </ModalComp>\r\n      )}\r\n      {/* View Event Modal */}\r\n      {selectedEvent && (\r\n        <ModalComp\r\n          name={selectedEvent.name}\r\n          creatorId={selectedEvent.creator._id}\r\n          eventId={selectedEvent._id}\r\n          canBook\r\n          canDelete\r\n          authUserId={userId}\r\n          onBack={modalCancelHandler}\r\n          bookText={token ? 'Book' : 'Login to Book'}\r\n          onBook={token ? id => BookEvent({ variables: { id } }) : unAuth}\r\n          onDelete={id => DeleteEvent({ variables: { id } })}\r\n        >\r\n          <h5>Hosted by {selectedEvent.creator.email}</h5>\r\n          <h6 className='text-muted d-flex align-items-center'>\r\n            <MdAccessTime className='mr-3' />\r\n            {eventDate(selectedEvent.starts, selectedEvent.ends)}\r\n          </h6>\r\n          <h6 className='text-muted d-flex align-items-center'>\r\n            <MdLocationOn className='mr-3' />\r\n            {selectedEvent.location}\r\n          </h6>\r\n          <div className='bg-light mt-3'>\r\n            <span className='font-weight-bold'>Details</span>\r\n            <p className='text-muted'>{selectedEvent.description}</p>\r\n          </div>\r\n        </ModalComp>\r\n      )}\r\n      {/* View Booking Modal */}\r\n      {selectedBooking && (\r\n        <ModalComp\r\n          name={selectedBooking.event.name}\r\n          canCancel\r\n          authUserId={userId}\r\n          onBack={modalCancelHandler}\r\n          onCancel={id => CancelBooking({ variables: { id } })}\r\n          bookingId={selectedBooking._id}\r\n        >\r\n          <h5>Hosted by {selectedBooking.event.creator.email}</h5>\r\n          <h6 className='text-muted d-flex align-items-center'>\r\n            <MdAccessTime className='mr-3' />\r\n            {eventDate(\r\n              selectedBooking.event.starts,\r\n              selectedBooking.event.ends\r\n            )}\r\n          </h6>\r\n          <h6 className='text-muted d-flex align-items-center'>\r\n            <MdLocationOn className='mr-3' />\r\n            {selectedBooking.event.location}\r\n          </h6>\r\n          <div className='bg-light mt-3'>\r\n            <span className='font-weight-bold'>Details</span>\r\n            <p className='text-muted'>{selectedBooking.event.description}</p>\r\n          </div>\r\n        </ModalComp>\r\n      )}\r\n      {/* Create event */}\r\n      <div className='mt-5 ml-5'>\r\n        <button\r\n          className='btn btn-dark mb-2 d-flex align-items-center justify-content-center'\r\n          onClick={token ? startCreateEventHandler : unAuth}\r\n        >\r\n          <MdAdd className='mr-2' />\r\n          <span>{token ? 'Create Event' : 'Login to Create Event'}</span>\r\n        </button>\r\n      </div>\r\n      {/* Loading and Display Events */}\r\n      {loadingFetch && (\r\n        <Spinner\r\n          animation='border'\r\n          role='status'\r\n          className='d-flex justify-content-center align-items-center mx-auto mt-5'\r\n        />\r\n      )}\r\n      {!loadingFetch && (\r\n        <EventList\r\n          events={events_}\r\n          bookings={bookings_}\r\n          authUserId={userId}\r\n          onViewEvent={showEventDetail}\r\n          onViewBook={showBookDetail}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst MainNavigation = props => {\r\n  const context = useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg='dark' variant='dark' expand='lg'>\r\n      <Navbar.Brand href='/' className='p-2'>\r\n        L O D I\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse className='p-2'>\r\n        <Nav className='mr-auto'>\r\n          <NavLink className='nav-link' to='/events'>\r\n            Events\r\n          </NavLink>\r\n        </Nav>\r\n        <Nav>\r\n          {!context.token && (\r\n            <NavLink className='nav-link' to='/auth'>\r\n              Login / Signup\r\n            </NavLink>\r\n          )}\r\n        </Nav>\r\n        {context.token && (\r\n          <div\r\n            className='d-flex justify-content-between'\r\n            style={{ minWidth: '13.75rem' }}\r\n          >\r\n            <div className='mt-3 text-light d-flex align-items-center'>\r\n              {context.userEmail}\r\n            </div>\r\n            <button\r\n              type='button'\r\n              className='btn btn-outline-light mt-3'\r\n              onClick={context.logout}\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useContext } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\nimport AuthPage from './pages/Auth';\r\nimport EventsPage from './pages/Events';\r\nimport MainNavigaton from './components/Navigation/MainNavigation';\r\nimport { AuthContext } from './context/auth-context';\r\nimport './App.css';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql'\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('lodiToken');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nconst App = () => {\r\n  const context = useContext(AuthContext);\r\n  const token = localStorage.getItem('lodiToken');\r\n  const userId = localStorage.getItem('lodiUserId');\r\n  const userEmail = localStorage.getItem('lodiUserEmail');\r\n  if (token && userId && userEmail) {\r\n    context.reAuth(token, userId);\r\n    context.setEmail(userEmail);\r\n  }\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <MainNavigaton />\r\n        <main className='main-content container-fluid'>\r\n          <Switch>\r\n            {context.token && <Redirect from='/' to='/events' exact />}\r\n            {context.token && <Redirect from='/auth' to='/events' exact />}\r\n            {!context.token && <Route path='/auth' component={AuthPage} />}\r\n            <Route path='/events' component={EventsPage} />\r\n            {!context.token && <Redirect to='/auth' exact />}\r\n          </Switch>\r\n        </main>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { AuthProvider } from './context/auth-context';\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}