{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/Modal/Modal.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","components/Spinner/Spinner.js","pages/Events.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","AuthPage","useState","isLogin","setIsLogin","context","useContext","emailEl","useRef","passwordEl","className","onSubmit","event","preventDefault","email","current","value","password","trim","length","requestBody","query","variables","axios","post","then","resData","data","login","token","userId","tokenExpiration","console","log","catch","err","htmlFor","type","id","ref","onClick","Modal","props","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","EventItem","key","eventId","price","Date","date","toLocaleDateString","creatorId","onDetail","bind","EventList","events","map","_id","authUserId","creator","onViewDetail","Spinner","EventsPage","creating","setCreating","setEvents","isLoading","setIsLoading","selectedEvent","setSelectedEvent","isActive","titleElRef","priceElRef","dateElRef","descriptionElRef","modalCancelHandler","useEffect","headers","Authorization","events2","fetchEvents","description","desc","prevEvents","updatedEvents","push","createEvent","rows","find","e","BookingList","bookings","booking","createdAt","onDelete","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","BookingsChart","chartData","labels","datasets","values","bucket","filteredBookingsCount","reduce","prev","fillColor","strokeColor","highlightFill","highlightStroke","style","textAlign","BookingsControls","activeOutputType","onChange","BookingsPage","setBookings","outputType","setOutputType","fetchBookings","bookings_","content","bookingId","prevState","filter","MainNavigation","to","logout","App","from","exact","path","component","ReactDOM","render","setToken","setUserId","Provider","document","getElementById"],"mappings":"+dAEaA,EAAcC,0BC4FZC,G,MAxFE,WAAO,IAAD,EACSC,oBAAS,GADlB,mBACdC,EADc,KACLC,EADK,KAGfC,EAAUC,qBAAWP,GAErBQ,EAAUC,iBAAO,MACjBC,EAAaD,iBAAO,MA8D1B,OACE,0BAAME,UAAU,YAAYC,SAzDR,SAAAC,GACpBA,EAAMC,iBACN,IAAMC,EAAQP,EAAQQ,QAAQC,MACxBC,EAAWR,EAAWM,QAAQC,MAEpC,GAA4B,IAAxBF,EAAMI,OAAOC,QAA2C,IAA3BF,EAASC,OAAOC,OAAjD,CAIA,IAAIC,EAAc,CAChBC,MAAM,0NASNC,UAAW,CACTR,MAAOA,EACPG,SAAUA,IAITd,IACHiB,EAAc,CACZC,MAAM,kOAQNC,UAAW,CACTR,MAAOA,EACPG,SAAUA,KAKhBM,IACGC,KAAK,gCAAiCJ,GACtCK,MAAK,SAAAC,GAAY,IAAD,EAC4BA,EAAQC,KAAKA,KAAKC,MAArDC,EADO,EACPA,MAAOC,EADA,EACAA,OAAQC,EADR,EACQA,gBACnB5B,GAAW0B,GACbxB,EAAQuB,MAAMC,EAAOC,EAAQC,GAE/BC,QAAQC,IAAIP,MAEbQ,OAAM,SAAAC,GACLH,QAAQC,IAAIE,EAAKA,EAAIR,YAMvB,yBAAKjB,UAAU,gBACb,2BAAO0B,QAAQ,SAAf,UACA,2BAAOC,KAAK,QAAQC,GAAG,QAAQC,IAAKhC,KAEtC,yBAAKG,UAAU,gBACb,2BAAO0B,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWC,GAAG,WAAWC,IAAK9B,KAE5C,yBAAKC,UAAU,gBACb,4BAAQ2B,KAAK,UAAb,UACA,4BAAQA,KAAK,SAASG,QAxEF,WACxBpC,GAAYD,KAuER,aACaA,EAAU,SAAW,a,QC/D3BsC,G,MArBD,SAAAC,GAAK,OACjB,yBAAKhC,UAAU,SACb,4BAAQA,UAAU,iBAChB,4BAAKgC,EAAMC,QAEb,6BAASjC,UAAU,kBAAkBgC,EAAME,UAC3C,6BAASlC,UAAU,kBAChBgC,EAAMG,WACL,4BAAQnC,UAAU,MAAM8B,QAASE,EAAMI,UAAvC,UAIDJ,EAAMK,YACL,4BAAQrC,UAAU,MAAM8B,QAASE,EAAMM,WACpCN,EAAMO,iBCXFC,G,MAFE,SAAAR,GAAK,OAAI,yBAAKhC,UAAU,eCsB1ByC,G,MAvBG,SAAAT,GAAK,OACrB,wBAAIU,IAAKV,EAAMW,QAAS3C,UAAU,qBAChC,6BACE,4BAAKgC,EAAMC,OACX,gCACID,EAAMY,MADV,MACoB,IAAIC,KAAKb,EAAMc,MAAMC,uBAG3C,6BACGf,EAAMZ,SAAWY,EAAMgB,UACtB,4DAEA,4BACEhD,UAAU,MACV8B,QAASE,EAAMiB,SAASC,U,EAAWlB,EAAMW,UAF3C,oBCQOQ,G,MAnBG,SAAAnB,GAChB,IAAMoB,EAASpB,EAAMoB,OAAOC,KAAI,SAAAnD,GAC9B,OACE,kBAAC,EAAD,CACEwC,IAAKxC,EAAMoD,IACXX,QAASzC,EAAMoD,IACfrB,MAAO/B,EAAM+B,MACbW,MAAO1C,EAAM0C,MACbE,KAAM5C,EAAM4C,KACZ1B,OAAQY,EAAMuB,WACdP,UAAW9C,EAAMsD,QAAQF,IACzBL,SAAUjB,EAAMyB,kBAKtB,OAAO,wBAAIzD,UAAU,eAAeoD,KCVvBM,G,MANC,kBACd,yBAAK1D,UAAU,WACb,yBAAKA,UAAU,qBC2PJ2D,G,MAvPI,WAAO,IAAD,EACSnE,oBAAS,GADlB,mBAChBoE,EADgB,KACNC,EADM,OAEKrE,mBAAS,IAFd,mBAEhB4D,EAFgB,KAERU,EAFQ,OAGWtE,oBAAS,GAHpB,mBAGhBuE,EAHgB,KAGLC,EAHK,OAImBxE,mBAAS,MAJ5B,mBAIhByE,EAJgB,KAIDC,EAJC,KAMjBC,EAAWrE,kBAAO,GAElBH,EAAUC,qBAAWP,GAErB+E,EAAatE,iBAAO,MACpBuE,EAAavE,iBAAO,MACpBwE,EAAYxE,iBAAO,MACnByE,EAAmBzE,iBAAO,MAwE1B0E,EAAqB,WACzBX,GAAY,GACZK,EAAiB,OA0FnB,OATAO,qBAAU,WAGR,OAjFkB,WAClBT,GAAa,GAmBbnD,IACGC,KAAK,gCAnBY,CAClBH,MAAM,qRAkB8C,CAClD+D,QAAS,CACPC,cAAe,UAAYhF,EAAQwB,SAGtCJ,MAAK,SAAAC,GACJ,IAAM4D,EAAU5D,EAAQC,KAAKA,KAAKmC,OAClCU,EAAUc,GACVZ,GAAa,MAEdxC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACR0C,GACFH,GAAa,MA6CnBa,GACAV,EAAS9D,SAAU,EACZ,WACL8D,EAAS9D,SAAU,KAGpB,IAGD,qCACIuD,GAAYK,IAAkB,kBAAC,EAAD,MAC/BL,GACC,kBAAC,EAAD,CACE3B,MAAM,YACNE,WAAS,EACTE,YAAU,EACVD,SAAUoC,EACVlC,UAvKoB,WAC1BuB,GAAY,GACZ,IAAM5B,EAAQmC,EAAW/D,QAAQC,MAC3BsC,GAASyB,EAAWhE,QAAQC,MAC5BwC,EAAOwB,EAAUjE,QAAQC,MACzBwE,EAAcP,EAAiBlE,QAAQC,MAE7C,KAC0B,IAAxB2B,EAAMzB,OAAOC,QACbmC,GAAS,GACc,IAAvBE,EAAKtC,OAAOC,QACkB,IAA9BqE,EAAYtE,OAAOC,QAJrB,CASA,IAAMP,EAAQ,CAAE+B,QAAOW,QAAOE,OAAMgC,eACpCxD,QAAQC,IAAIrB,GAEZ,IAAMQ,EAAc,CAClBC,MAAM,gWAWNC,UAAW,CACTqB,MAAOA,EACP8C,KAAMD,EACNlC,MAAOA,EACPE,KAAMA,IAIVjC,IACGC,KAAK,gCAAiCJ,EAAa,CAClDgE,QAAS,CACPC,cAAe,UAAYhF,EAAQwB,SAGtCJ,MAAK,SAAAC,GACJ8C,GAAU,SAAAkB,GACR,IAAMC,EAAa,YAAOD,GAW1B,OAVAC,EAAcC,KAAK,CACjB5B,IAAKtC,EAAQC,KAAKA,KAAKkE,YAAY7B,IACnCrB,MAAOjB,EAAQC,KAAKA,KAAKkE,YAAYlD,MACrC6C,YAAa9D,EAAQC,KAAKA,KAAKkE,YAAYL,YAC3ChC,KAAM9B,EAAQC,KAAKA,KAAKkE,YAAYrC,KACpCF,MAAO5B,EAAQC,KAAKA,KAAKkE,YAAYvC,MACrCY,QAAS,CACPF,IAAK3D,EAAQyB,UAGV6D,QAGVzD,OAAM,SAAAC,GACLH,QAAQC,IAAIE,QA0GVc,YAAY,WAEZ,8BACE,yBAAKvC,UAAU,gBACb,2BAAO0B,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,IAAKuC,KAErC,yBAAKpE,UAAU,gBACb,2BAAO0B,QAAQ,SAAf,SACA,2BAAOC,KAAK,SAASC,GAAG,QAAQC,IAAKwC,KAEvC,yBAAKrE,UAAU,gBACb,2BAAO0B,QAAQ,QAAf,QACA,2BAAOC,KAAK,iBAAiBC,GAAG,OAAOC,IAAKyC,KAE9C,yBAAKtE,UAAU,gBACb,2BAAO0B,QAAQ,eAAf,eACA,8BAAUE,GAAG,cAAcwD,KAAK,IAAIvD,IAAK0C,OAKhDN,GACC,kBAAC,EAAD,CACEhC,MAAOgC,EAAchC,MACrBE,WAAS,EACTE,YAAU,EACVD,SAAUoC,EACVlC,UAjFiB,WACvB,GAAK3C,EAAQwB,MAAb,CAIA,IAAMT,EAAc,CAClBC,MAAM,6LASNC,UAAW,CACTgB,GAAIqC,EAAcX,MAItBzC,IACGC,KAAK,gCAAiCJ,EAAa,CAClDgE,QAAS,CACPC,cAAe,UAAYhF,EAAQwB,SAGtCJ,MAAK,SAAAC,GACJkD,EAAiB,SAElB1C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,WA5BdyC,EAAiB,OAgFb3B,YAAa5C,EAAQwB,MAAQ,OAAS,WAEtC,4BAAK8C,EAAchC,OACnB,gCACIgC,EAAcrB,MADlB,KAC2B,IACxB,IAAIC,KAAKoB,EAAcnB,MAAMC,sBAEhC,2BAAIkB,EAAca,cAGrBnF,EAAQwB,OACP,yBAAKnB,UAAU,kBACb,qDACA,4BAAQA,UAAU,MAAM8B,QAtNA,WAC9B+B,GAAY,KAqNN,iBAKHE,EACC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CACEX,OAAQA,EACRG,WAAY5D,EAAQyB,OACpBqC,aA/GkB,SAAAd,GACxB,IAAMsB,EAAgBb,EAAOiC,MAAK,SAAAC,GAAC,OAAIA,EAAEhC,MAAQX,KACjDuB,EAAiBD,SClHNsB,G,MAvBK,SAAAvD,GAAK,OACvB,wBAAIhC,UAAU,kBACXgC,EAAMwD,SAASnC,KAAI,SAAAoC,GAClB,OACE,wBAAI/C,IAAK+C,EAAQnC,IAAKtD,UAAU,kBAC9B,yBAAKA,UAAU,uBACZyF,EAAQvF,MAAM+B,MADjB,KAC0B,IACvB,IAAIY,KAAK4C,EAAQC,WAAW3C,sBAE/B,yBAAK/C,UAAU,0BACb,4BACEA,UAAU,MACV8B,QAASE,EAAM2D,SAASzC,U,EAAWuC,EAAQnC,MAF7C,kB,QCXNsC,EAAmB,CACvBC,MAAO,CACLC,IAAK,EACLC,IAAK,KAEPC,OAAQ,CACNF,IAAK,IACLC,IAAK,KAEPE,UAAW,CACTH,IAAK,IACLC,IAAK,MAwCMG,EApCO,SAAAlE,GACpB,IAAMmE,EAAY,CAAEC,OAAQ,GAAIC,SAAU,IACtCC,EAAS,GAFgB,WAIlBC,GACT,IAAMC,EAAwBxE,EAAMwD,SAASiB,QAAO,SAACC,EAAMrG,GACzD,OACEA,EAAQH,MAAM0C,MAAQgD,EAAiBW,GAAQT,KAC/CzF,EAAQH,MAAM0C,MAAQgD,EAAiBW,GAAQR,IAExCW,EAAO,EAEPA,IAER,GACHJ,EAAOpB,KAAKsB,GACZL,EAAUC,OAAOlB,KAAKqB,GACtBJ,EAAUE,SAASnB,KAAK,CAEtByB,UAAW,wBACXC,YAAa,wBACbC,cAAe,yBACfC,gBAAiB,sBACjB7F,KAAMqF,KAERA,EAAM,YAAOA,IACNA,EAAO7F,OAAS,GAAK,GAtB9B,IAAK,IAAM8F,KAAUX,EAAmB,EAA7BW,GAyBX,OACE,yBAAKQ,MAAO,CAAEC,UAAW,WACvB,kBAAC,MAAD,CAAK/F,KAAMkF,MC1BFc,G,MAnBU,SAAAjF,GACvB,OACE,yBAAKhC,UAAU,oBACb,4BACEA,UAAsC,SAA3BgC,EAAMkF,iBAA8B,SAAW,GAC1DpF,QAASE,EAAMmF,SAASjE,U,EAAW,SAFrC,QAMA,4BACElD,UAAsC,UAA3BgC,EAAMkF,iBAA+B,SAAW,GAC3DpF,QAASE,EAAMmF,SAASjE,U,EAAW,UAFrC,YC8GSkE,EAlHM,WAAO,IAAD,EACS5H,oBAAS,GADlB,mBAClBuE,EADkB,KACPC,EADO,OAEOxE,mBAAS,IAFhB,mBAElBgG,EAFkB,KAER6B,EAFQ,OAGW7H,mBAAS,QAHpB,mBAGlB8H,EAHkB,KAGNC,EAHM,KAKnB5H,EAAUC,qBAAWP,GAE3BoF,qBAAU,WACR+C,MAEC,IAEH,IAAMA,EAAgB,WACpBxD,GAAa,GAkBbnD,IACGC,KAAK,gCAlBY,CAClBH,MAAM,2PAiB8C,CAClD+D,QAAS,CACPC,cAAe,UAAYhF,EAAQwB,SAGtCJ,MAAK,SAAAC,GACJ,IAAMyG,EAAYzG,EAAQC,KAAKA,KAAKuE,SACpC6B,EAAYI,GACZzD,GAAa,MAEdxC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZuC,GAAa,OAiDf0D,EAAU,kBAAC,EAAD,MAkBd,OAjBK3D,IACH2D,EACE,oCACE,kBAAC,EAAD,CACER,iBAAkBI,EAClBH,SAdwB,SAAAG,GAE5BC,EADiB,SAAfD,EACY,OAEA,YAYZ,6BACkB,SAAfA,EACC,kBAAC,EAAD,CAAa9B,SAAUA,EAAUG,SAvDd,SAAAgC,GAC3B3D,GAAa,GACb,IAAMtD,EAAc,CAClBC,MAAM,sKAQNC,UAAW,CACTgB,GAAI+F,IAIR9G,IACGC,KAAK,gCAAiCJ,EAAa,CAClDgE,QAAS,CACPC,cAAe,UAAYhF,EAAQwB,SAGtCJ,MAAK,SAAAC,GACJqG,GAAY,SAAAO,GAIV,OAHwBA,EAAUC,QAAO,SAAApC,GACvC,OAAOA,EAAQnC,MAAQqE,QAI3B3D,GAAa,MAEdxC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZuC,GAAa,SAwBT,kBAAC,EAAD,CAAewB,SAAUA,OAM5B,oCAAGkC,IChFGI,G,MAlCQ,SAAA9F,GACrB,IAAMrC,EAAUC,qBAAWP,GAE3B,OACE,4BAAQW,UAAU,mBAChB,yBAAKA,UAAU,yBACb,qCAEF,yBAAKA,UAAU,0BACb,6BACIL,EAAQwB,OACR,4BACE,kBAAC,IAAD,CAAS4G,GAAG,SAAZ,iBAGJ,4BACE,kBAAC,IAAD,CAASA,GAAG,WAAZ,WAEDpI,EAAQwB,OACP,oCACE,4BACE,kBAAC,IAAD,CAAS4G,GAAG,aAAZ,aAEF,4BACE,4BAAQjG,QAASnC,EAAQqI,QAAzB,iBCDDC,G,MAnBH,WACV,IAAMtI,EAAUC,qBAAWP,GAC3B,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAMW,UAAU,gBACd,kBAAC,IAAD,KACGL,EAAQwB,OAAS,kBAAC,IAAD,CAAU+G,KAAK,IAAIH,GAAG,UAAUI,OAAK,IACtDxI,EAAQwB,OAAS,kBAAC,IAAD,CAAU+G,KAAK,QAAQH,GAAG,UAAUI,OAAK,KACzDxI,EAAQwB,OAAS,kBAAC,IAAD,CAAOiH,KAAK,QAAQC,UAAW9I,IAClD,kBAAC,IAAD,CAAO6I,KAAK,UAAUC,UAAW1E,IAChChE,EAAQwB,OAAS,kBAAC,IAAD,CAAOiH,KAAK,YAAYC,UAAWjB,KACnDzH,EAAQwB,OAAS,kBAAC,IAAD,CAAU4G,GAAG,QAAQI,OAAK,SChBvDG,IAASC,OACP,mBdH0B,SAAAvG,GAAU,IAAD,EACTxC,mBAAS,MADA,mBAC5B2B,EAD4B,KACrBqH,EADqB,OAEPhJ,mBAAS,MAFF,mBAE5B4B,EAF4B,KAEpBqH,EAFoB,KAanC,OACE,kBAACpJ,EAAYqJ,SAAb,CACEpI,MAAO,CACLa,MAAOA,EACPC,OAAQA,EACRF,MAdQ,SAACC,EAAOC,EAAQC,GAC5BmH,EAASrH,GACTsH,EAAUrH,IAaN4G,OAXS,WACbQ,EAAS,MACTC,EAAU,SAYPzG,EAAME,YcnBX,KACE,kBAAC,EAAD,OAGFyG,SAASC,eAAe,W","file":"static/js/main.88f9139b.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = props => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = (token, userId, tokenExpiration) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n  };\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUserId(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useRef, useState, useContext } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport './Auth.css';\r\n\r\nconst AuthPage = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  const emailEl = useRef(null);\r\n  const passwordEl = useRef(null);\r\n\r\n  const switchModeHandler = () => {\r\n    setIsLogin(!isLogin);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    const email = emailEl.current.value;\r\n    const password = passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n        query Login($email: String!, $password: String!) {\r\n          login(email: $email, password: $password) {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password\r\n      }\r\n    };\r\n\r\n    if (!isLogin) {\r\n      requestBody = {\r\n        query: `\r\n          mutation CreateUser($email: String!, $password: String!) {\r\n            createUser(userInput: {email: $email, password: $password}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password\r\n        }\r\n      };\r\n    }\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody)\r\n      .then(resData => {\r\n        const { token, userId, tokenExpiration } = resData.data.data.login;\r\n        if (isLogin && token) {\r\n          context.login(token, userId, tokenExpiration);\r\n        }\r\n        console.log(resData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err, err.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className='auth-form' onSubmit={submitHandler}>\r\n      <div className='form-control'>\r\n        <label htmlFor='email'>E-mail</label>\r\n        <input type='email' id='email' ref={emailEl} />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label htmlFor='password'>Password</label>\r\n        <input type='password' id='password' ref={passwordEl} />\r\n      </div>\r\n      <div className='form-actions'>\r\n        <button type='submit'>Submit</button>\r\n        <button type='button' onClick={switchModeHandler}>\r\n          Switch to {isLogin ? 'Signup' : 'Login'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = props => (\r\n  <div className='modal'>\r\n    <header className='modal__header'>\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className='modal__content'>{props.children}</section>\r\n    <section className='modal__actions'>\r\n      {props.canCancel && (\r\n        <button className='btn' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className='btn' onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => <div className='backdrop'></div>;\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport './EventItem.css';\r\n\r\nconst EventItem = props => (\r\n  <li key={props.eventId} className='events__list-item'>\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>Your the owner of this event.</p>\r\n      ) : (\r\n        <button\r\n          className='btn'\r\n          onClick={props.onDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default EventItem;\r\n","import React from 'react';\r\nimport EventItem from './EventItem/EventItem';\r\nimport './EventList.css';\r\n\r\nconst EventList = props => {\r\n  const events = props.events.map(event => {\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <ul className='event__list'>{events}</ul>;\r\n};\r\n\r\nexport default EventList;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className='spinner'>\r\n    <div className='lds-dual-ring' />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Modal from '../components/Modal/Modal';\r\nimport Backdrop from '../components/Backdrop/Backdrop';\r\nimport EventList from '../components/Events/EventList/EventList';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport './Events.css';\r\n\r\nconst EventsPage = () => {\r\n  const [creating, setCreating] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n  const isActive = useRef(true);\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  const titleElRef = useRef(null);\r\n  const priceElRef = useRef(null);\r\n  const dateElRef = useRef(null);\r\n  const descriptionElRef = useRef(null);\r\n\r\n  const startCreateEventHandler = () => {\r\n    setCreating(true);\r\n  };\r\n\r\n  const modalConfirmHandler = () => {\r\n    setCreating(false);\r\n    const title = titleElRef.current.value;\r\n    const price = +priceElRef.current.value;\r\n    const date = dateElRef.current.value;\r\n    const description = descriptionElRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\r\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        title: title,\r\n        desc: description,\r\n        price: price,\r\n        date: date\r\n      }\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + context.token\r\n        }\r\n      })\r\n      .then(resData => {\r\n        setEvents(prevEvents => {\r\n          const updatedEvents = [...prevEvents];\r\n          updatedEvents.push({\r\n            _id: resData.data.data.createEvent._id,\r\n            title: resData.data.data.createEvent.title,\r\n            description: resData.data.data.createEvent.description,\r\n            date: resData.data.data.createEvent.date,\r\n            price: resData.data.data.createEvent.price,\r\n            creator: {\r\n              _id: context.userId\r\n            }\r\n          });\r\n          return updatedEvents;\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const modalCancelHandler = () => {\r\n    setCreating(false);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  const fetchEvents = () => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            events {\r\n              _id\r\n              title\r\n              description\r\n              date\r\n              price\r\n              creator {\r\n                _id\r\n                email\r\n              }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + context.token\r\n        }\r\n      })\r\n      .then(resData => {\r\n        const events2 = resData.data.data.events;\r\n        setEvents(events2);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (isActive) {\r\n          setIsLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const showDetailHandler = eventId => {\r\n    const selectedEvent = events.find(e => e._id === eventId);\r\n    setSelectedEvent(selectedEvent);\r\n  };\r\n\r\n  const bookEventHandler = () => {\r\n    if (!context.token) {\r\n      setSelectedEvent(null);\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n          mutation BookEvent($id: ID!) {\r\n            bookEvent(eventId: $id) {\r\n              _id\r\n             createdAt\r\n             updatedAt\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: selectedEvent._id\r\n      }\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + context.token\r\n        }\r\n      })\r\n      .then(resData => {\r\n        setSelectedEvent(null);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    isActive.current = true;\r\n    return () => {\r\n      isActive.current = false;\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(creating || selectedEvent) && <Backdrop />}\r\n      {creating && (\r\n        <Modal\r\n          title='Add Event'\r\n          canCancel\r\n          canConfirm\r\n          onCancel={modalCancelHandler}\r\n          onConfirm={modalConfirmHandler}\r\n          confirmText='Confirm'\r\n        >\r\n          <form>\r\n            <div className='form-control'>\r\n              <label htmlFor='title'>Title</label>\r\n              <input type='text' id='title' ref={titleElRef} />\r\n            </div>\r\n            <div className='form-control'>\r\n              <label htmlFor='price'>Price</label>\r\n              <input type='number' id='price' ref={priceElRef} />\r\n            </div>\r\n            <div className='form-control'>\r\n              <label htmlFor='date'>Date</label>\r\n              <input type='datetime-local' id='date' ref={dateElRef} />\r\n            </div>\r\n            <div className='form-control'>\r\n              <label htmlFor='description'>Description</label>\r\n              <textarea id='description' rows='4' ref={descriptionElRef} />\r\n            </div>\r\n          </form>\r\n        </Modal>\r\n      )}\r\n      {selectedEvent && (\r\n        <Modal\r\n          title={selectedEvent.title}\r\n          canCancel\r\n          canConfirm\r\n          onCancel={modalCancelHandler}\r\n          onConfirm={bookEventHandler}\r\n          confirmText={context.token ? 'Book' : 'Confirm'}\r\n        >\r\n          <h1>{selectedEvent.title}</h1>\r\n          <h2>\r\n            ${selectedEvent.price} -{' '}\r\n            {new Date(selectedEvent.date).toLocaleDateString()}\r\n          </h2>\r\n          <p>{selectedEvent.description}</p>\r\n        </Modal>\r\n      )}\r\n      {context.token && (\r\n        <div className='events-control'>\r\n          <p>Share your own Events!</p>\r\n          <button className='btn' onClick={startCreateEventHandler}>\r\n            Create Event\r\n          </button>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <EventList\r\n          events={events}\r\n          authUserId={context.userId}\r\n          onViewDetail={showDetailHandler}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n","import React from 'react';\r\n\r\nimport './BookingList.css';\r\n\r\nconst BookingList = props => (\r\n  <ul className='bookings__list'>\r\n    {props.bookings.map(booking => {\r\n      return (\r\n        <li key={booking._id} className='bookings__item'>\r\n          <div className='bookings__item-data'>\r\n            {booking.event.title} -{' '}\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className='bookings__item-actions'>\r\n            <button\r\n              className='btn'\r\n              onClick={props.onDelete.bind(this, booking._id)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default BookingList;\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs';\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n  Cheap: {\r\n    min: 0,\r\n    max: 100\r\n  },\r\n  Normal: {\r\n    min: 100,\r\n    max: 200\r\n  },\r\n  Expensive: {\r\n    min: 200,\r\n    max: 10000000\r\n  }\r\n};\r\n\r\nconst BookingsChart = props => {\r\n  const chartData = { labels: [], datasets: [] };\r\n  let values = [];\r\n  // eslint-disable-next-line\r\n  for (const bucket in BOOKINGS_BUCKETS) {\r\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n      if (\r\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n      ) {\r\n        return prev + 1;\r\n      } else {\r\n        return prev;\r\n      }\r\n    }, 0);\r\n    values.push(filteredBookingsCount);\r\n    chartData.labels.push(bucket);\r\n    chartData.datasets.push({\r\n      // label: \"My First dataset\",\r\n      fillColor: 'rgba(220,220,220,0.5)',\r\n      strokeColor: 'rgba(220,220,220,0.8)',\r\n      highlightFill: 'rgba(220,220,220,0.75)',\r\n      highlightStroke: 'rgba(220,220,220,1)',\r\n      data: values\r\n    });\r\n    values = [...values];\r\n    values[values.length - 1] = 0;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingsChart;\r\n","import React from 'react';\r\n\r\nimport './BookingsControls.css';\r\n\r\nconst BookingsControls = props => {\r\n  return (\r\n    <div className='bookings-control'>\r\n      <button\r\n        className={props.activeOutputType === 'list' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'list')}\r\n      >\r\n        List\r\n      </button>\r\n      <button\r\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\r\n        onClick={props.onChange.bind(this, 'chart')}\r\n      >\r\n        Chart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingsControls;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport BookingList from '../components/Bookings/BookingList/BookingList';\r\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\r\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\r\n\r\nconst BookingsPage = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bookings, setBookings] = useState([]);\r\n  const [outputType, setOutputType] = useState('list');\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchBookings = () => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n             createdAt\r\n             event {\r\n               _id\r\n               title\r\n               date\r\n               price\r\n             }\r\n            }\r\n          }\r\n        `\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + context.token\r\n        }\r\n      })\r\n      .then(resData => {\r\n        const bookings_ = resData.data.data.bookings;\r\n        setBookings(bookings_);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const deleteBookingHandler = bookingId => {\r\n    setIsLoading(true);\r\n    const requestBody = {\r\n      query: `\r\n         mutation CancelBooking($id: ID!) {\r\n          cancelBooking(bookingId: $id) {\r\n            _id\r\n             title\r\n            }\r\n          }\r\n        `,\r\n      variables: {\r\n        id: bookingId\r\n      }\r\n    };\r\n\r\n    axios\r\n      .post('http://localhost:5000/graphql', requestBody, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + context.token\r\n        }\r\n      })\r\n      .then(resData => {\r\n        setBookings(prevState => {\r\n          const updatedBookings = prevState.filter(booking => {\r\n            return booking._id !== bookingId;\r\n          });\r\n          return updatedBookings;\r\n        });\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const changeOutputTypeHandler = outputType => {\r\n    if (outputType === 'list') {\r\n      setOutputType('list');\r\n    } else {\r\n      setOutputType('chart');\r\n    }\r\n  };\r\n\r\n  let content = <Spinner />;\r\n  if (!isLoading) {\r\n    content = (\r\n      <>\r\n        <BookingsControls\r\n          activeOutputType={outputType}\r\n          onChange={changeOutputTypeHandler}\r\n        />\r\n        <div>\r\n          {outputType === 'list' ? (\r\n            <BookingList bookings={bookings} onDelete={deleteBookingHandler} />\r\n          ) : (\r\n            <BookingsChart bookings={bookings} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  return <>{content}</>;\r\n};\r\n\r\nexport default BookingsPage;\r\n","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './MainNavigation.css';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nconst MainNavigation = props => {\r\n  const context = useContext(AuthContext);\r\n\r\n  return (\r\n    <header className='main-navigation'>\r\n      <div className='main-navigation__logo'>\r\n        <h1>LODI</h1>\r\n      </div>\r\n      <nav className='main-navigation__items'>\r\n        <ul>\r\n          {!context.token && (\r\n            <li>\r\n              <NavLink to='/auth'>Authenticate</NavLink>\r\n            </li>\r\n          )}\r\n          <li>\r\n            <NavLink to='/events'>Events</NavLink>\r\n          </li>\r\n          {context.token && (\r\n            <>\r\n              <li>\r\n                <NavLink to='/bookings'>Bookings</NavLink>\r\n              </li>\r\n              <li>\r\n                <button onClick={context.logout}>Logout</button>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { useContext } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport AuthPage from './pages/Auth';\nimport EventsPage from './pages/Events';\nimport BookingsPage from './pages/Bookings';\nimport MainNavigaton from './components/Navigation/MainNavigation';\nimport { AuthContext } from './context/auth-context';\n\nimport './App.css';\n\nconst App = () => {\n  const context = useContext(AuthContext);\n  return (\n    <BrowserRouter>\n      <MainNavigaton />\n      <main className='main-content'>\n        <Switch>\n          {context.token && <Redirect from='/' to='/events' exact />}\n          {context.token && <Redirect from='/auth' to='/events' exact />}\n          {!context.token && <Route path='/auth' component={AuthPage} />}\n          <Route path='/events' component={EventsPage} />\n          {context.token && <Route path='/bookings' component={BookingsPage} />}\n          {!context.token && <Redirect to='/auth' exact />}\n        </Switch>\n      </main>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/auth-context';\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}